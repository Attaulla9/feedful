{
  "title": "The future of computers is only $4 away, with Raspberry Pi CEO Eben Upton",
  "url": "https://www.theverge.com/22966155/raspberry-pi-ceo-interview-eben-upton-computer-chip-shortage-diy",
  "date": "2022-03-08T14:31:50.000Z",
  "author": "Nilay Patel",
  "content": "      <figure>      <img alt=\"\" src=\"https://cdn.vox-cdn.com/thumbor/fL2rH3LzmMSo1Qf6XSs9BvRjd0s=/0x0:2050x1367/1310x873/cdn.vox-cdn.com/uploads/chorus_image/image/70593648/VRG_ILLO_Decoder_Eben_s.0.jpg\" />        <figcaption><em>Eben Upton is the CEO of the Raspberry Pi Foundation.</em> | Photo Illustration by Grayson Blackmon / The Verge</figcaption>    </figure>  <p>Plus, how to make a chip in a chip shortage</p> <p class=\"p--has-dropcap p-large-text\" id=\"yLZj0S\">Today I’m talking to Eben Upton, the CEO of Raspberry Pi, a fascinating company that makes beloved tiny hackable computers that are extremely inexpensive: the cheapest Raspberry Pi is just $4, the most popular model is about $35, and the most expensive model that comes with a keyboard is $70. They run Linux, and you can do just about anything with them: people build robots, they learn to code, they run media servers. There are Raspberry Pis on the international space station running experiments. I have one in my house that just connects a bunch of smart home gear together. These things are a phenomenon, and a underappreciated part of the computing world we live in today.</p><p id=\"rVxfw8\">They’re also some of the only readily available computers that are designed to be tinkered with — unlike a smartphone or even really modern desktops, they’re not heavily locked down, and using one requires learning how a computer actually works. And that’s the entire point: Eben told me the idea of the Raspberry Pi was to create a product that enticed kids into studying computer science at the University of Cambridge, where he used to work. Just like the Commodore 64 or the Apple IIe taught a generation of kids how to tinker with computers, Eben wanted to give people an open computer that rewarded experimentation. The goal was simply to sell enough to increase the number of CS applicants by — this is true — 100 students. </p><p id=\"xPnx7U\">They’ve achieved that goal. Seven million Raspberry Pi units were sold last year, and there’s talk of the company going public. </p><p id=\"60eRik\">Eben and I talked about all of that. This was a good one. </p><div id=\"dS57q4\"><iframe frameborder=\"0\" height=\"200\" scrolling=\"no\" src=\"https://playlist.megaphone.fm?e=VMP6368525332\" width=\"100%\"></iframe></div><p id=\"3mi8K3\"><em>This transcript has been lightly edited for clarity.</em></p><p id=\"obVw5O\"><strong>Eben Upton is the CEO of Raspberry Pi and the co-founder of the Raspberry Pi Foundation. Welcome to </strong><em><strong>Decoder</strong></em><strong>.</strong></p><p id=\"gsRwE0\">Good to be here.</p><p id=\"zO6mys\"><strong>I am very excited to talk to you. I love meeting executives from companies with products that are ubiquitous, but maybe not as explored. Raspberry Pi is one of those with a long and super interesting backstory.</strong></p><p id=\"HQk0f1\">It’s strange. You say it’s a long backstory; it really is a long backstory now. The foundation was incorporated right at the tail end of 2008. Then we had this very long and private prototyping cycle — knowing the sort of thing we wanted to build, but not knowing in detail what it was that we were going to build, or what it was that the market was going to accept. Even the public part of Raspberry Pi is now over 10 years old: we just celebrated the 10th anniversary of taking our first order on the 29th of February, 2012. We’ve had two birthdays so far — and a bunch of pseudo-birthdays.</p><p id=\"c0QG24\"><strong>Let’s set up the very basics. We have a lot of listeners: I feel like there’s a category of people who intimately know everything about Raspberry Pis, and there’s a category of people who have no idea what we’re talking about. What is a Raspberry Pi?</strong></p><p id=\"iVWeWQ\">At its simplest, a Raspberry Pi is an almost exactly credit card-sized, single board computer. It’s an object [made of] green PCB [printed circuit board]. You plug a mobile phone power supply into it, you put an SD card in it with an operating system, plug it into your television, and you have a PC. We’ve made a number of different iterations of the Raspberry Pi over the years, but they all answered to that basic description.</p><p id=\"JEn7Ln\"><strong>That foundation started in 2008, and then you had a long cycle of trying to figure out what to build. Why did you start as a foundation? That’s a very unique piece of this puzzle.</strong></p><div class=\"c-float-right c-float-hang\"><aside id=\"2vrHno\"><q>“We were trying to solve a social problem with Raspberry Pi.”</q></aside></div><p id=\"5dTN6D\">We were trying to solve a social problem with Raspberry Pi. Most of us who were involved at the start were in one way or another involved with the university here in Cambridge. Cambridge is one of the homes of computing, it’s one of the places that has a claim. I’m actually sitting in a building called the Maurice Wilkes building here on the outskirts of Cambridge. In the late 1940s, Maurice Wilkes was a professor at the university. He built a machine called EDSAC, which is one of about 10 machines in the world to have a claim one way or another to be the first computer. Everyone has their own definition of “first computer” that allows their institution’s computer to be the first. EDSAC was the first computer to be used by someone other than the people who made it.</p><p id=\"bxn2Bn\">EDSAC provided services to other physical sciences departments in the university. Some of the X-ray crystallography work around the discovery of the structure of DNA — the computation for that was done using EDSAC. Cambridge is an amazing place to study computing, and we were struggling a decade, 15 years, ago; we were struggling to persuade schoolchildren that they wanted to come here to study computer science. The social mission that Raspberry Pi has always had has been to get young people excited about it again, because I think there was an era back in the ’80s and ’90s when young people weren’t excited about computers. </p><p id=\"uDTO1k\">It’s always been about building a piece of hardware. The idea was there’s a missing piece of hardware that corresponds to those Commodore 64 and Trash-80 machines of our childhoods. Why a foundation? We were trying to accomplish a social good, so a socially structured organization seemed to make more sense to us than a purely for-profit one.</p><p id=\"ucsPqv\"><strong>Let’s unpack that: if you walked around any other social benefit organization or went to any conference over the past 20 years, the drumbeat of “STEM education is important” was overwhelmingly loud. Obviously we have a self-selected audience: they are very interested in computers. Right now we’re going through a boom of people being interested in coding. We just interviewed </strong><a href=\"https://www.theverge.com/22910624/career-karma-ceo-ruben-harris-interview-startup-tech-linkedin-decoder\"><strong>Ruben Harris from Career Karma</strong></a><strong>, a company that matches people to coding boot camps. What do you mean specifically by trying to get people interested in computer science? </strong></p><p id=\"0faHkq\">That drumbeat has become a lot louder for a variety of reasons in the last 20 years. When we started this, it wasn’t particularly loud at all; it was not long after the dotcom crash. I remember applying for some government funding for an early iteration of Raspberry Pi and receiving a letter from the government that had the mortal sentence — something along the lines of, “Demand for computer programmers has declined recently and is not expected to recover.” There was a pervasive attitude that computing was yesterday’s fad — that there had been a 10, 15, 20, 30-year fad, and that we were now out of the end of it. The dotcom crash marked the end of an obsession with computer programming as a thing that significant numbers of people should do.</p><p id=\"gsiW2p\">I think there has been a revival elsewhere — a non-Raspberry Pi-related revival and enthusiasm for computing. That’s actually been wonderful for us. Rather than feeling like a voice in the wilderness at the start, we’ve ended up feeling that we’re part of a community of after-school clubs and coding camps and online material that’s trying to solve the same problem. The very narrow problem we were trying to solve was: how many people are applying to study computer science at the University of Cambridge? It used to be 600. Now it’s 200. We want to admit 100 people to the University of Cambridge. We do not want to have two to one applicant ratios. That’s not how Cambridge works. We want to be besieged — we never got to the point where we admitted anyone who wasn’t clever, but we got to a point where we admitted pretty much everyone who was clever. You want to be in that position of being able to be very discriminating. We had seen this decline and we wanted to make the numbers go back up again. Raspberry Pis have been all sorts of places—</p><p id=\"hKjweK\"><strong>You’re on the space station.</strong></p><p id=\"XiWy6i\">Yeah, the space station. The ridiculous thing about the ones on the space station — we’ve had two up there since about 2015. The weird thing about the ones on the station is that there are also many other Raspberry Pis on the station that are not our Raspberry Pis. They’re great little computers running payloads. They’re obviously flight qualified. We have no idea how many there are on the station.</p><p id=\"xj0yRn\">Usually when they downmass the payload, somebody will mail us and say, “Hey, I just had a Pi on the station for two years.” They end up everywhere, but the origins of this are so thin and parochial, and about tuning a number by 100 people. Let’s say we make 1,000 Raspberry Pis in 2011 that we get out to 1,000 kids, and 100 of those kids apply to the university. That is a 50 percent increase in the applicant pool, and that will allow us to be more discriminating. Such a parochial little ambition.</p><p id=\"qWirbk\"><strong>That is amazing. I want to hone in on the fact that you said that you needed to make a piece of hardware, because from my perspective, </strong><em><strong>Decoder </strong></em><strong>covers a lot of consumer tech products. I talk about them all day long. You mentioned the Commodore 64, the Trash-80, the TRS-80. I would put the Apple IIE in that list. These are all the computers I grew up with — the guts of the computer were completely exposed to you and you could reprogram them at will. I remember the first video game I got from my Commodore 64: the source code was printed in a magazine, and I typed in all the source code, and I went off and played the game. Those days are gone and most computers are pretty opaque to people. Was the goal to make a pretty open computer that stands apart from the hermetically sealed world of the iPhone?</strong></p><p id=\"tkepws\">Android phones weren’t really even a thing. In fact, the foundation’s incorporation is pretty much contemporaneous with the iPhone launch. But there’s been a long-term trend towards replacing general purpose computers with appliance computers. So this is a vastly powerful computer.</p><p id=\"AUiP9b\"><strong>You can’t see this but Eben is holding up his phone.</strong></p><p id=\"ZENgZY\">Yeah, my iPhone Eight is a vastly powerful computer, but it’s not really a computer, it’s an appliance. That trend started, I guess, with the replacement of home computers as a platform for computer gaming, primarily by games consoles. It’s continued over time to a point where the PC and the Mac are the only surviving examples of what used to be the way computers always were.</p><p id=\"u14DUB\">The Chromebook is an interesting example of an appliance that is very successful at replacing a general purpose computer with an appliance computer. The existence of general-purpose computers is not a God-given right. It’s a historical accident, a path-dependent historical accident. What we came to realize is the thing that had absolutely gone away was the cost-effective general purpose computers. There were lots of cost-effective appliances: cheap games, consoles, and mobile phones. But there weren’t any more low-cost general purpose computers. There probably had never been general purpose computers as low-cost as a Raspberry Pi. Really, the idea was that cost had become a barrier to access to devices that might beguile you into being a computer programmer.</p><div class=\"c-float-left c-float-hang\"><aside id=\"o8hmbY\"><q>“I was beguiled into being a computer programmer.”</q></aside></div><p id=\"7uWuEB\">I was beguiled into being a computer programmer. I didn’t really, on any given day, sit down and decide to become a computer programmer or electrical engineer, and I was tricked into it. That was the thing that had gone away, so when we were saying “We’re going to make a computer,” we’re not just saying that we’re going to make a programmable computer. We’re going to make a fun computer that happens to be programmable, because that’s what our machines were in the 1980s. You need a thing that beguiles its way into people’s lives and then beguiles them into becoming programmers. That’s what we’re trying to build.</p><p id=\"aN9azI\"><strong>You were working at Broadcom, but on the side, you were trying to increase applicant pools to the University of Cambridge.</strong></p><p id=\"mibeM4\">I was a director of studies at the university.  I remained director of studies for a little while after I went into industry. We were fortunate that the devices that I had access to through my job happened to be devices which could be repurposed to meet this goal of the foundation.</p><p id=\"mwoTX9\"><strong>I can say, “The world needs a $15 computer that is as charming as my Commodore 64 was.” My ability to go and develop that thing is shockingly limited. How did you go from the idea to decision to “We’re going to spend a long time in stealth figuring out what that product is” to actually shipping?</strong></p><div class=\"c-float-right c-float-hang\"><div id=\"lcTfw3\"><div data-anthem-component=\"aside:9545330\"></div></div></div><p id=\"qAeQvC\">Yeah. I’d built something while I was doing my PhD. I’d built a thing based on Atmel, the same chips they used in Arduinos. I’d managed to persuade this chip to generate a video signal and you could plug it into an analog television. It gave you a Trash-80’s worth or Apple IIE’s worth of processing capability, half a meg of RAM, a few MIPS of processing, but it absolutely did not meet that modern definition of fun. It would’ve been very exciting for people our age, but it wouldn’t ever have taken off among young people. Then I ended up with access to these chips, which were intended for the mobile phone market.</p><p id=\"aQPESt\">Those turn out to be very integrated. They have the ability to drive HDMI output. They ended up with USB. You go around the outside of a Raspberry Pi board and look at the interfaces that you need: while you’ve got GPI, you have some general purpose IO, you have USB. Certainly until very recently, the way that Raspberry Pi did network was that it would bridge from USB 2.0 to Ethernet. You have USB, which both gives you your USB peripherals and the ability to bridge out to Ethernet. You have HDMI for display output, but you have an analog television and you have an SD card interface. So you have these chips and they were intended to be used in mobile phones, but they end up having all of the things needed. You think, “Yeah, actually that does tick all the boxes for what we needed.”</p><p id=\"Fq2pF3\">For a long time, they didn’t have general purpose processing cores, so they didn’t have ARM cores in them. Obviously, Raspberry Pi is an ARM-based PC organization, and fairly late in the day, in 2009 or 2010, we got access to the first device from the 270X family that had an ARM11, a very low-end ARM core in it. That became the basis for Raspberry Pi One. In fact, that’s still a device we ship today. We still ship the product called Zero, which is the $5 product. Those are still based around that very first chip, BCM2835.</p><p id=\"d8t4JH\"><strong>Were those ARM11 cores the same as the cores in the first smartphones?</strong></p><p id=\"YlO9Kr\">Are they actually the same? Yeah, I believe the core in the very first iPhone was ARM11 — incredible when you think how far that chip line has come, through all of the generations of ARM processor and then out into Apple-designed, custom ARM CPUs. The very first iPhone — I found one in a box the other day. Very chunky object actually. But yes, those were ARM11s. It’s not an unreasonable amount of performance as long as you have fairly constrained ambitions in terms of what you do with it.</p><p id=\"bKA1HG\"><strong>The thing that strikes me is we’re talking about appliance computing and we’re talking about beguiling kids into coding and we’re talking about the same chip, or the same components expressed in wildly different ways.</strong></p><p id=\"Z8RSdE\">That’s it. There’s an interesting dynamic there. You were talking about Apple II. When Steve and Steve were making the Apple One, they could go out and buy a 6502 from an electronics store out of a bin. It cost them 25 bucks. They were basically, for $25, getting their hands on the absolute state of the art in electronics, in chips. The thing you could build with that was going to be competitive with anything that anybody else could build, no matter how big you were. You could sit down and be two guys in a shed and you could build something which could compete with IBM or compete with HP. </p><p id=\"SZJFl5\">That isn’t so much the case anymore. A lot of the very highest-end chips aren’t generally available. They’re only available to qualified customers. One of the reasons Raspberry Pi has been successful in the industrial space is we go and get various pieces of silicon from various vendors that are not generally, not broadly, available and package them together in a way that can then be used in the platform for innovation by other people. You think about the single board computer — the credit card-sized single board computer. A lot of the growth of Raspberry Pi recently has actually been in what we call compute module, which is a version of Raspberry Pi that lacks all of those connectors and is really only those core pieces of silicon that we’ve procured, built a compelling, stable software platform around, and then released in a form which can be integrated into your product.</p><p id=\"C0Djh1\"><strong>That’s fascinating. I want to come back to that. I just want to finish the story of Raspberry Pi: you started to get 100 more applicants to Cambridge. The last number I saw is 7.1 million units sold in 2021.</strong></p><p id=\"8xFjwV\">Yeah, 7.1 in 2020. Seven [million] in 2021. There’s a global semiconductor shortage at the moment, you may have noticed. It’s really galling. We sold almost exactly the same number — a handful of fewer units in 2021 than we did in 2020 against just a background of absolutely exploding demand. A lot of the work we do at the moment is really managing our customers now through the shortage environment that we’re in, and helping people who invest in the platform continue to build on top of it at a point where we cannot build quite as many. We are still building very large numbers, but we can’t build quite as many as we’d like to.</p><p id=\"le8If6\"><strong>That’s your job as CEO of Raspberry Pi, but the structure started out of a foundation, which is just not how a normal startup begins.</strong></p><p id=\"0MPRWi\">No.</p><p id=\"RNkgxT\"><strong>What is the role of the foundation?</strong></p><p id=\"PRuPmk\">The role of the foundation is to do good work. It’s a UK registered charity. It has a mission. I think “purposes” is the legal word: the thing that a British charitable foundation commits to do. The purposes of a foundation can only be changed with the consent of the charities commission and the foundation’s board and possibly membership. Its purposes are to promote STEM education, particularly computing education, especially among young people — particularly among primary and secondary schoolchildren. To do that, it does a variety of things. We return money to it. We return our surplus profit to it. That funds some activities. It receives corporate and individual philanthropic money.</p><p id=\"iHH7x9\">It turns out that having a reliable source of income — which the foundation does from our work — is extremely valuable for corporate philanthropic partners, because if you’re a company and you’re giving to charity, you worry that the thing you’re funding will dry up and blow away. The way that people mitigate this risk is they make very short, single-year grants. That sucks for everyone, right? It sucks for the recipient because you can’t plan long-term. It sucks for the donor because you end up doing an enormous amount of work every year administering these recurring grants. If you have an organization that you could say, “This is independently funded. We can guarantee you that we won’t dry up and blow away. We can guarantee that all of your money you donate to us will go on actual project work rather than on central administrative costs. We’ll cover all of that ourselves. In return, you can make three-year grants. It’s easier for you. It’s easier for us. You can take that stream of dividend payment from us and you can leverage that into the philanthropic space.” </p><p id=\"LTKvq0\">We also do a lot of government contracting as well now. We’re a trusted provider of teacher training services, for example. All of the teacher training for computer science in the UK now is handled by an organization called the National Center for Computing Education. The Raspberry Pi Foundation runs that along with a couple of partners. While it probably started as an organization that spends the money from the sale of products in pursuit of the traditional Raspberry Pi charitable purposes, it’s become a larger organization with these three pillars.</p><p id=\"ujEIvA\"><strong>That’s amazing. What’s the split between all of that work? You run a company called Raspberry Pi and you have enough volume to get chips that other people can’t get. You now have a very commercial product that’s just a compute center, that maybe an agricultural services provider needs to just buy 100 boards to run a wheat farming data cloud. I just made that up. I don’t know.</strong></p><p id=\"VsWSnb\">That’s probably a thing. We certainly are in the cucumber farming industry. I don’t know if we’re in the wheat farming industry, but I wouldn’t be surprised.</p><p id=\"GRTSxw\"><strong>But that’s very commercial, right? That’s a business. That’s your job. Is there a mission split? Do you spend your time thinking about how the purpose of all this is to get kids into computers, or how you have a whole bunch of commercial customers that are driving all of the money?</strong></p><p id=\"xDHkNB\">Yes. I do both of those things. We are very lucky, with the exception of the compute module product that I mentioned, we haven’t ever really had to specialize: on the one hand, the compute module. On the other hand, <a href=\"https://www.raspberrypi.com/products/raspberry-pi-400/\">Pi 400</a>, which is our Trash-80 format — Raspberry Pi built into a keyboard. One of those is clearly for our industrial customers. The other one is clearly for our consumer customers and our educational customers. Other than that, the middle bit, the single board computer business, which is still the vast bulk of our units — we’ve never had to choose. We’ve never had to make an architectural or design decision in order to service one customer or the other. The things you do to be a good computer for kids are also the things you do to be a good computer for oil rigs. We have this idea: “What’s the tougher environment — an oil rig or a kid’s bedroom?” Having been in my kids’ bedrooms, I’m not sure. I have friends who worked on oil rigs. I’m not sure I would care to pick. I’ve never had to make a difficult decision there, which has been quite nice. It is a good split because I’m not naturally a not-for-profit person. That’s not where I come from. I’m a games industry person originally, back in the day.</p><div class=\"c-float-right c-float-hang\"><aside id=\"OmMIbI\"><q>“What’s the tougher environment — an oil rig or a kid’s bedroom?”</q></aside></div><p id=\"78rBGW\"><strong>The most for-profit industry of them all.</strong></p><p id=\"vL94BL\">Yeah. That’s it. Most for-profit industry of them all that I got into. Did a startup, sold my startup, got the hell out by the time I was 22. I did perceive it as being a challenging industry to be in for an entire career, but it was a lot of fun while I was there. I’m interested in business. I’ve been interested in business since I was a kid. I remember standing in the train station at Leeds near where I grew up as a kid, and watching the businessmen walk past with their suits and briefcases and thinking, “That must be amazing to be busy and to have somewhere important for you to go.”</p><p id=\"u2Ry2t\">I’ve always been interested in it. I’m just a business geek, really. It’s sad. I did an MBA. The funny thing was I did an MBA just before Raspberry Pi being incorporated and the takeoff of the product. I did an MBA and I finished in April of 2011 and told my wife Liz, who’s a co-founder at Raspberry Pi, that we’d have a quiet time for a little bit. Then the news of Raspberry Pi leaked in May; we kind of leaked it in May. It has not stopped for nearly 11 years now. It’s not slowed down.</p><p id=\"khWTCK\"><strong>This is what I think of as the </strong><em><strong>Decoder </strong></em><strong>question. You have an interesting decision-making space. You have a foundation and a mission. You have a vast array of customers, from oil rigs to kids in their bedrooms. How do you make decisions?</strong></p><p id=\"oXKjQB\">We build the products we want to buy. There’s a characterization of classic-era Apple, or perhaps post-Jobs’ return Apple, as a company that built products that Steve wanted to buy. The genius of Apple was that lots of other people wanted to buy those things. That was why it was successful. We don’t build the things I want to make. We build the things we want to buy. We have a big office full of engineers. There are huge advantages to that as a way of designing products compared to the traditional marketing-led way of doing this stuff, because the problem with that is it tends to lead to interpolated products.</p><p id=\"YNB65A\">Traditional market analysis tends to lead to products which interpolate between the needs of different user communities. It’s entirely possible to interpolate; it’s not a continuous space. It’s entirely possible to interpolate between two decent chunky markets. It’s entirely possible to misperceive where the markets are, but even if you perceive where they are, if you try to land products in between them, you can land them in an empty space in between two concentrations of demand. The interesting thing about building the products you yourself would want to buy is at least there’s one customer.</p><p id=\"ArqoqA\">Often, most of us are representative of some class of person. If you’re lucky, then it’s a large and underserved class of person and you end up with a product like an iPad or a Peloton bicycle, or a Raspberry Pi. Obviously Peloton is having a fun time at the moment, but the Peloton story is fascinating, right? The guy almost failed to get his Kickstarter to work. Really, his Kickstarter was only backed by his friends. No one could believe that this was going to be a thing. Of course, it turns out to be enormously popular. These category-defining products that you can’t market research or focus group into existence are often generated, I think, by that mindset: “I’m going to build the thing that I want and we’ll see whether there are other people like me.”</p><p id=\"cEduRS\"><strong>How many people work at Raspberry Pi? </strong></p><p id=\"QCSt6R\">The foundation is about 130ish people at the moment. Raspberry Pi Limited, my bit, is about 80 people. Inside that 80, you have an engineering workforce between 40 and 50 people. We have a publishing company. We are actually quite comms-heavy. This is Liz, my wife and my co-founder. She runs that aspect of things. We have very nice graphic design and writing capability. She’s a journalist. As an organization, we’ve always valued community and we’ve always valued writing as a craft just as we valued electronic design and software engineering as crafts. That’s how we’ve come to have a publishing company. That’s how we’ve come to have a bunch of copy editors and graphic designers and videographers and people on staff.</p><p id=\"TDKnmO\"><strong>Inside of that engineering organization, you make hardware. You have to also make a Raspberry Pi operating system. What’s the split between hardware and software?</strong></p><p id=\"E2eCql\">Software-heavy. This is certainly true from my experience: all hardware companies are really software companies, because you can’t make the hardware operative without software. The complexity of hardware has gone up more slowly over time than the complexity of the software that you run on it. We’re a Linux computer company: we leverage this enormous reservoir of collective endeavors of the Linux kernel and GNU and Debian. There’s still a lot of device-specific software engineering. Software engineering is probably two-thirds to three-quarters of the engineering team.</p><p id=\"zQVnD4\"><strong>We just had the </strong><a href=\"https://www.theverge.com/22955336/sonos-google-lawsuit-ceo-patrick-spence-interview\"><strong>CEO of Sonos</strong></a><strong> on and he said, “We have more software engineers.” We had the </strong><a href=\"https://www.theverge.com/22533735/john-deere-cto-hindman-decoder-interview-right-to-repair-tractors\"><strong>CTO of John Deere</strong></a><strong>, which makes tractors. He said, “We have more software engineers.” It seems like that is just a universal rule. You have more software engineers than hardware engineers.</strong></p><p id=\"nb4FvD\">Yeah, which is fun as a software engineer; I was a software engineer. One of the big surprises for me with Raspberry Pi was that people do different things in the education space. People do not do with their Raspberry Pi what I expected them to do. I expected people to write computer games because that’s what I did when I was a child. In practice, people build robots. The interesting thing: kids find moving atoms around in the world much more interesting than moving pixels around on the screen. For a company that thinks that software engineering is where all the jobs are, it feels like we’re producing a generation of mechatronics engineers, basically — hardware engineers.</p><p id=\"ykdWAF\"><strong>In terms of your thesis that the Raspberry Pi will beguile you into engineering: if someone wants to move pixels around on a screen, the iPhone developer environment is available to them. They can get an app on their phone—</strong></p><p id=\"xIJWuP\">If you own a Mac.</p><p id=\"niQHat\"><strong>Well, sure. But you can do it.</strong></p><p id=\"qVLA8E\">Yeah.</p><p id=\"B0z8hv\"><strong>Right. If you want to move an atom around the world, and you’re looking at your Mac or your PC or your phone — there’s no way to do it.</strong></p><p id=\"XqUNnh\">The best way to do it is to go buy Raspberry Pi Pico, which is last year’s product — the ultra low-end, the $4 microcontroller-based board. Plug that into your Mac or your PC and use that to move objects around the world. We ended up even solving the problem for physical computing with traditional objects, as well.</p><p id=\"zgxNsp\"><strong>When I think of companies making custom chips, I think of the biggest players in the space: Apple, Microsoft, and Google are making custom chips. Seven million units is a lot — more than I will ever sell of anything. We have a T-shirt store, and I don’t think we’re moving 7 million units. But it’s at a vastly different scale. How did you come to build your own chip? What was that process like?</strong></p><p id=\"k9b4Oy\">The team here had always struggled. You think about building the things that you want to buy. There’s a constraint that you can build the things you want to buy, but you obviously have to build things that are going to make money as well. One of the challenges with building something in the microcontroller space — which has always been an ambition for the team here and something that I was deeply involved with — is that if you build a platform on somebody else’s microcontroller platform, you’re creating value for the microcontroller vendor, not for yourself. They do a lot of software engineering and then there is then a world of clone devices that use the same chips and leverage their software investments for free.</p><p id=\"Qa5j9J\">When people design products around the Arduino software environment, once they go to scale, they disintermediate the Arduino product and they just go buy chips. That means that it’s very hard to justify investing in software engineering if you’re not going to get the return. It turns out in the microcontroller space that the winning move is to be the microcontroller vendor. If you’re not the microcontroller vendor, then it’s very hard to make that work as a business model. Very few companies have made manufacturing microcontroller-based boards work. </p><p id=\"wgdGXt\">Really, RP2040 is that: it provides Raspberry Pi with an opportunity to build microcontroller boards and to make very substantial investments in software engineering, but then to have some skin in the game in terms of the result. It means that every RP2040 base board has a little cut for Raspberry Pi. It’s important in closing the business model and justifying the return on investment. Making chips is hard, but it’s not that hard if you’ve got the right people. It’s one of those weird things, actually: it’s either impossible or — trivial is the wrong word, but it’s either intractable or really surprisingly tractable. What that depends on is whether you have the right people.</p><p id=\"Vy9LeJ\">Let’s say there are between five and 10 distinct activities involved in going from the idea of a chip to something that’s shipping at scale and is reliable. If you have one person in each of those boxes — if you’re Apple and you’re going to build an M1 to power your MacBook, you’d need a lot more people in each of those boxes, but if you want to build a chip, that’s relatively simple. As long as you have one person who is extremely skilled in each of those boxes, it goes from being impossible to being tractable. If you’re missing one box, two boxes, three boxes, it goes back from being tractable to being functionally impossible.</p><p id=\"n3N7DC\"><strong>What are the boxes?</strong></p><p id=\"XZfyZj\">Let’s see. Digital front end design, so writing Verilog. Putting your chip together. Structured testing via one or several different means — ensuring that your chip is correct, is verifiable and verified and will do what it says on the tin, to some approximation. You write a spec for the chip, and then you make the chip, and you do your best to make sure that it conforms to the spec. Then you get the chip back, and then you actually write down what the chip does. That’s the spec. Hopefully they’re fairly close to each other, but there’s always a little bit of post-hoc retrofit of what you meant to do.</p><p id=\"hzVDY3\">That said, there are several allied roles in verification. Floor planning synthesis, place and route. Static timing analysis and timing closure: effectively taking the low-level spec of the chips; the Verilog, the synthesizable spec of the chip, and then synthesizing that to make gates, a net list. Then taking that net list and laying those gates out on the chip in a way that causes the signals to propagate through the chip in time to run at your target clock speed, because effectively your clock speed defines a window of time within which you must do everything in a synchronous design.</p><p id=\"eB4aV0\">DFT is “designed for testability”: verification is about checking that the chip as designed meets the specification. Designed for testability means that once I have a chip that’s come back from the fab, am I able to check whether this is a good one or not? Because some percent — 5 percent, 10 percent — of chips will be bad chips. You want to be able to discriminate between a good chip and a bad chip very quickly on a piece of automatic test equipment, so you design structures that go into the chip: DFT structures that effectively let you exercise a substantial majority of the paths on the chip and ensure that they’ve been fabricated correctly in the fab.</p><p id=\"xgRE1s\">Then you have operations roles, which are effectively about managing the process of getting wafers from a foundry. Good luck with that this year. Actually, we get great support from our foundry partners, but we can feel in all sorts of ways how tight the semiconductor supply chain is this year — getting them sorted up, put them into packages, tested, and put into reels, then out to the customer. When one of them fails at the customer, we get it back from the customer, and then do a failure analysis on it to figure out why it’s not working.</p><p id=\"J5Yfoy\">Qualification and characterization as well: there are elements of the spec that you really actually do need to do post-hoc. How much current can I drive out of this pin? If I’m driving this much current out of this pin, what does the voltage end up being? How much power does the thing consume? These are things that have to be done experimentally, so there are roles there as well. They’re building all of the hardware, designing and building all the hardware associated with that.</p><p id=\"Wt6uDy\">I said five to 10 distinct activities, so I’m trying to get over five. I think I’ve got over five there.</p><p id=\"hlXO9U\"><strong>That is fascinating. I feel like I could do an hour just unpacking that system. You sell this product for $4.</strong></p><p id=\"VDq0P3\">We sell the chip for 70 cents.</p><p id=\"7FuttJ\"><strong>Right. That is a lot of smart, expensive people for a 70-cent chip that is packaged in a $4 controller board. How does any of this make money?</strong></p><p id=\"t8wb3S\">[Creating the RP2040]  probably cost like $5 million or something. The answer is you sell a lot of them. That’s the answer with all Raspberry Pi products. They are murderously expensive to design, particularly the modern big Raspberry Pis that have radios on them. One thing we do is we go and do radio conformance everywhere. Raspberry Pi is a legal conformant radio emitting product in Tanzania. We take every product everywhere, and that actually piles up a few thousand dollars at a time. Just the radio conformance for a modern Raspberry Pi product is the best part of half a million dollars.</p><p id=\"5LWOyx\"><strong>Is it just Wi-Fi, or do you have Bluetooth too?</strong></p><p id=\"rhrPmj\">Dual band Wi-Fi these days, and Bluetooth.</p><p id=\"LVKyKG\"><strong>To ship that chip in every country in the world, you have to go and figure out who the regulator is.</strong></p><p id=\"o2FXyy\">Yeah. I remember we couldn’t sell Raspberry Pis in South Africa for a year once because their version of the FCC burnt down, their office. They had a huge backlog, and no one could ship new electronic products in South Africa for a year. You end up being exposed to all of these weird vulnerabilities, and you also just end up spending a huge amount of money, $3,000 or $4,000 per country, on testing. All of these things are expensive and they all are basically powered by selling vast numbers of units. And obviously the numbers for semiconductor products are much higher because the number of cents you make on each unit is much lower and the upfront costs are proportionally bigger.</p><p id=\"U1mUo2\"><strong>Do you have that second revenue stream that I see every other consumer tech company racing towards, which is, “We’re going to turn this phone into a shopping mall, and every button you push on this phone is going to return a 30 percent cut to me”? Or, “We’re going to do NFTs in video games now.” Every other company is trying to build that ongoing software-mediated revenue stream.</strong></p><p id=\"qogYHo\">The phrase “software company with recurring revenue” is an in-house joke at Raspberry Pi. I talked to an investor once, and I described all the cool stuff we do. It’s all very well being a software company with recurring revenue, but sooner or later, somebody needs to be making hardware — actually, there’s a business opportunity. If everyone wants to become a software company, there’s a huge business opportunity in not doing that, in being a hardware company. We went to see this investor, and he’s like, “Yeah, you guys are great, but you should totally pivot to being a software company with recurring revenue.”</p><p id=\"m4QFwA\">We don’t currently. Currently, the software for us is entirely a cost center. As I said, we are mostly a software company, so the vast majority of our engineering payroll is effectively servicing a cost center, which is interesting.</p><p id=\"ViCnBL\">Early on, we tried some sort of app store platform, and it wasn’t a success. It was a white-labeled version of somebody else’s platform. It wasn’t a success. Certainly at that time, people weren’t seeing it as a consumer device. We did it in the service of this idea of fun — that if we want this thing to be fun and attractive to kids, it needs to have entertainment content on it, and you need a store to make that work. We went through all the mechanics of doing that, and it just didn’t fly.</p><p id=\"BE761F\">It’s hard to get excited about it, really. Once you get to a point where you’re making your own chips, you’ve bought fairly firmly into the notion that you are a hardware company, and that’s where your field of expertise is.</p><p id=\"ImWuzd\"><strong>My favorite headline at </strong><em><strong>The Verge</strong></em><strong> to this day, in 10 years — we just printed the words “TORTILLA PODS” in all capital letters. I don’t know if you remember this. There was a period where every new gadget was like, “It’ll make drinks. It’ll be a Keurig for X.” Finally at the end, someone made a tortilla maker with a $15 a month subscription to tortilla pods. It was so dumb: the pinnacle of the pod moment was tortilla pods. All of that came down to needing a recurring revenue stream. You are a big successful company. I think Raspberry Pi is a cultural object now, and the recurring revenue stream is you’re going to want to buy another Raspberry Pi.</strong></p><div class=\"c-float-right c-float-hang\"><aside id=\"qKvD9w\"><q>“You’re going to want to buy another Raspberry Pi... That’s the recurring stream.”</q></aside></div><p id=\"Yo7Cxw\">You’re going to want to buy another Raspberry Pi. There you are. That’s the recurring stream: your first one will probably not be your last. And certainly with devices like Pico, at $4, they have this interesting model where people embed them. If something’s expensive, then you’ll do a project with them, and then you will scavenge the object out of the project at the end — but with $4 products, $5 products, even $35 products, essentially, people tend to leave them embedded in projects and buy another one, and that turns out to be fairly compelling.</p><p id=\"ib4Swo\">While we have had challenges with  the supply chain situation, it’s sad. Those challenges have probably fallen harder on our enthusiast base than they have on our industrial base for a variety of reasons.</p><p id=\"TuYtPn\"><strong>How do you mean?</strong></p><p id=\"CsQzES\">If we have been unable to build units, probably enthusiasts have ended up finding it harder to buy Raspberry Pi. Everyone’s found it harder to buy Raspberry Pis, but industrial users, we’ve largely been able to — maybe they’re not getting everything they want, but they’re getting something. Enthusiasts right now, you can buy a Raspberry Pi, but many days, you have to shop around to find somewhere that it’s in stock.</p><p id=\"VubrxY\">What’s happened is because lots of people have many Raspberry Pis, people have been thrown back upon the Raspberry Pis they already have, rather than buying new Raspberry Pis. That’s why there’s still lots of excitement and energy around Raspberry Pi, and lots of enthusiasts building things with Raspberry Pi, because they’re building them with last year’s Raspberry Pi rather than building one now.</p><p id=\"7JR7u2\">We have this interesting thing with software: back to cost structure, all of our operating system releases run on everything we ever made. We don’t have a planned obsolescence strategy: we did a Debian Bullseye software release last year. For about a month before the launch, I ran that on a 2014-era Raspberry Pi model 1B on my desk to make sure it was good, and it wasn’t actually good at the point where I first started doing that.</p><p id=\"0541gA\">One of the annoyances for the software team in the last month of the releasing process was me saying, “Hang on a second. Here’s the 2015 software release. If I grab a window with my mouse and I waggle it, it’s smooth. Here’s our new one. If I grab a window and I waggle it, it’s jerky. What’s that? What’s that about? Fix that. Here’s the memory footprint. Here’s what happens when I run top. Here’s the amount of memory that’s reported free in 2015. Here’s the amount of memory that’s reported free this year. Absolutely happy that the new operating system consumes a little more memory, but I will give you an allocation of 10 megabytes” — the old Raspberry Pi was a 512MB device — “I’ll give you an allocation of 2 percent of the memory of the device per year for bloat, so if you’ve had five years, you can have a tenth of the memory on the device of additional bloat.” Over time, that really does add up and make the system hard to use. But we had more bloat than that.</p><p id=\"SCCAnb\">So there was that kind of user interface responsiveness and memory bloat figure with some of the last optimization items. That means that you can take a 2012- or 2014-era Raspberry Pi out of a drawer, and you can run it. You’re not having to go back and download old operating system releases from us. You can download the new one. That’s helped people a little bit. It’s an additional cost for us because it’s more testing, which means me being a pain in the neck to the software team, but it does help people stretch the devices they’ve got.</p><p id=\"iVRiB0\"><strong>The cell phone supply chain now makes a lot of chips and parts. You see those parts get recontextualized in all kinds of ways: LCD screens are all over the place. They’re so cheap because cell phones exist. A Meta Quest 2 is a midrange Android phone on your face — just recontextualize all these parts. For you, that means the chips have gotten more capable: I see a lot of people doing media servers or Chromecast replacements with Raspberry Pis. I have a Raspberry Pi here. It’s my favorite product in my entire house. It’s a product called HOOBS: a HomeKit out-of-box, Homebridge out-of-box, and it is literally just a Raspberry Pi that connects my Ring cameras to HomeKit on my iPhone, because Apple and Amazon would prefer not to talk to each other. It’s a whole company that does this.</strong></p><p id=\"B14V2o\">It’s amazing how often you see this with Tesla and the number of Raspberry Pi Tesla hacks, because Tesla doesn’t want to talk to anyone else.</p><p id=\"eIsZnF\"><strong>There’s a lot of middleware that gets built with Raspberry Pis.</strong></p><p id=\"cDaRAE\">We call it “Tell your mom” sometimes: “Tell your mom that—” such and such. “Well, tell your dad that—” such and such. Being the sad kid in the middle between mom and dad sometimes offers money to be made. </p><p id=\"CdXI6T\"><strong>That’s my question for you. Do you think about expansion into those areas? Do you think, “Man, the market for Raspberry Pi-based Plex servers is very high. We should start making some of those on our own at potentially higher margins, because here’s a company that’s just buying our kit, putting it in a 3D printed box with some pre-labeled software, and selling it as a consumer product”?</strong></p><p id=\"vMai5k\">No, we love those people. Why have we been successful? Why have we been able to defend our niche? We’ve been able to defend our niche in large part because we don’t pick winners. In my language, that would be picking a winner. That would be picking an application that’s worth pursuing ourselves. We don’t tend to pick winners in software either, so we don’t tend to optimize for specific applications. We tend to try to do as much middleware-level optimization on the platform as possible, because then  those engineering hours benefit as many applications as possible. We do optimize XBMC — sorry, living in the past. We do optimize for the Kodi media player.</p><p id=\"0R1yeG\"><strong>You and I are from the same exact soup.</strong></p><p id=\"Yt2KnP\">Right. I liked XBMC. I thought that was a nice name. It’s heritage. We optimize that, and we optimize Chromium, because those are applications which are so ubiquitous as to almost be middleware. No, we are very happy to make a few bucks. We sell a lot of units, so we only need to make a few bucks on each unit.</p><p id=\"EK2NKT\">If someone takes a Raspberry Pi and puts it in a box and makes a hundred bucks on it, that’s great. Well done. That person took a risk. That person put all of their eggs in one vertical, and if it doesn’t pay off for them, they make no bucks. If it pays off for them, then they make a hundred bucks a unit, and that’s a fair reward for the risk they took.</p><p id=\"JrJe81\">We are kind of a horizontalizing platform. The interesting thing with Raspberry Pi is that we built this thing that has lots of little verticals, whether those were consumer verticals or industrial verticals, or verticals that didn’t exist because they were too small to justify the investment in developing a hardware platform to address them. What Raspberry Pi does is sort of smoosh all of those verticals together into one big horizontal blob, and then the residual bits of vertical-specific expenditure; innovation, implementation, get done by other people. The incremental profits associated with that re-verticalization of the horizontal Raspberry Pi platform flow to the people who take the risks. That’s great for them, and I want no part of it. I’ll take my couple of bucks a unit, thank you very much.</p><p id=\"hpnxA1\"><strong>That’s very idealistic. </strong></p><p id=\"oLL4ca\">It’s purely mercenary. It’s the business model that we are good at. Well, I mean, there’s Amazon, right? But there’s a reason why there isn’t one big company that does everything. We are good at what we do, and we would be bad at what many of our customers do with our platform.</p><p id=\"NPOcHm\"><strong>Right, but when I say it’s idealistic — do you have investors?</strong></p><p id=\"CiPATv\">We do. Well, we have one big investor. Obviously we have the foundation and we have the usual fiduciary responsibility of an organization to its big shareholder. We did a $45 million raise last September from a couple of investors, so we have traditional fund manager money in the organization. Now, we’re lucky: we found some great partners who believe in what we do and believe that what we do is the best way to make money and they are supportive of our strategy.</p><p id=\"6FexSv\"><strong>Okay, so you’ve got a couple of great investors who know that you’re not going to go try to eat some vertical market. There are lots of rumors that you might go public — that you might IPO the company.</strong></p><p id=\"E4tTvN\">Yeah.</p><p id=\"O7XN0c\"><strong>Are you going to IPO the company?</strong></p><p id=\"VsjOUi\">There’s a war on, right? It’s terrible, right? We are in an unprecedented time now and it’s the very smallest and least important consequence of the unprecedented time. You have an exponential graph of the number of uses of the word unprecedented in the last two years. The very least and least sad consequence of the unprecedentedness is that it’s hard to float companies right now. So would we at some point? Yes, we might. Some of the things we do are very expensive and require large amounts of capital to make them happen.</p><p id=\"DLlGdh\">Obviously the public markets are a place that you could go to raise that money. There are other places you could go to raise the money as well. Obviously we have done this recently. I would never say never. I think probably the public discussion of the possibility that we might float the company has run ahead, both of our appetite for it and of the market-level feasibility of floating anything at the moment. I don’t know what it’s like in the US, but from my view in London, markets are basically closed, right? So it’s hard times.</p><p id=\"lyEj8h\"><strong>Bracketing all that, which I imagine is very challenging and certainly unprecedented: let’s say you do an IPO. You get a lot of investors who tend to want growth, and they might come to you and tell you that they’re taking your $4 board and they’re shipping a $100 product, making $70 worth of margin on that. “We just gave you all this money, so just go buy this company.” I didn’t see that very clearly when Google bought Nest — they basically said, “Go on a shopping spree.” This might have tanked Nest. I think if you asked Tony Fadell he would tell you that the thing that tanked Nest was that Google forced them to go buy stuff they didn’t really want to buy. The Dropcam CEO would happily tell you the same. What happens? You get a bunch of money, and the simplest way to grow is to just buy your nearest high-margin thing. How would you protect against that, given everything you said?</strong></p><p id=\"XIUsFU\">I will say a couple of things: I’m not sure the public market actually really does prize that. The public market imposes a fairly swingeing discount on inorganic growth. You don’t get the value. You cannot bolt a business together out of inorganic growth and expect the same multiples that you would get for organic growth. Certainly in the UK, that’s a pretty established fact. You get penalized for not having been smart enough to figure out how to go do it yourself.</p><p id=\"C9ZJhg\"><strong>I appreciate that.</strong></p><p id=\"MNMuh0\">There are some challenges associated with that which might not apply to a division like Nest inside a large company purchasing some inorganic growth.</p><p id=\"ILVwB8\">I don’t know. I suspect that if one went public, you would hope that the investors became investors  because they like what you do rather than out of a conviction that you should go do something else. Subsequent to being a games person, I come from a semiconductor industry background. Semiconductors is the toughest and most demoralizing world. You think about the intelligence that goes into making the Wi-Fi chip that goes into a smartphone and you think how little money out of the whole stack of the hardware BOM for that platform is appropriated by the Wi-Fi chip’s vendor.</p><p id=\"hAUY98\"><strong>BOM is “bill of materials,” by the way.</strong></p><p id=\"YK6Nm5\">In 2011 when we were designing Raspberry Pi, I was sitting at Heathrow Airport in the departure area, talking to Pete Lowe, my friend and co-founder who designed the hardware. I was on my way to California, and I said something like, “Can you send me the BOM? I may be on a plane for 10 hours and that’s a lot of time to work on a BOM.” </p><p id=\"3nMhUi\">And I was just aware of this circle of silence expanding away from me, and I’m worrying that the circle of silence would intersect one of the gentlemen with the MP5 submachine guns. Bill of materials is always fun to do.</p><p id=\"n3xKcx\">You think of the small fraction of the hardware BOM: any vendor, a PMIC vendor or Wi-Fi chip vendor or RAM vendor. These people are doing huge amounts of work pushing forward the boundaries of human endeavor, the boundaries of human knowledge, and huge amounts of work, and then you make a few bucks. That’s a tiny fraction of the hundreds of dollars [of] value achieved when that product is sold to customers, which itself is a tiny fraction of the service’s value — the software companies with recurring revenue, the tiny fraction of the app store value that is generated by all of this work. </p><p id=\"NjS7if\">I’m used to being in the semiconductor industry which does huge, amazing feats of intellectual endeavor and appropriates almost no value for it, so perhaps it seems very natural to me. But people do invest in semiconductor companies even though you can draw a picture that says, “You should really be a cell phone company or a network operator,” or “You should be Epic Games,” or “You should be some other participant.”</p><p id=\"AKxlap\">If somebody has to be that participant in the ecosystem and the rules of capitalism mean that sooner or later, you will end up being able to appropriate almost exactly your cost of capital — no less, no more. That’s part of someone’s differentiator, as part of someone’s diversified portfolio: your bit will make this horrible sort of financialist description of how the technology industry works. Every niche over time will come to be no more or no less profitable than it deserves to be, and I think Raspberry PI’s niche is actually quite a nice one. It’s one that we are good at filling.</p><p id=\"TWkAoY\"><strong>A lot of people want to use Raspberry Pis for lots of things. We send them up into space. The hardware is still MicroSD storage and USB power connectors, which are maybe not the most reliable. Do you have ideas on how you would make those more robust? Is that a new product line? Is that something you even think about?</strong></p><div class=\"c-float-right c-float-hang\"><aside id=\"ARXJxt\"><q>“Buy good SD cards.”</q></aside></div><p id=\"J8bbyk\">Buy good SD cards. There’s no problem with SD cards — it’s the thing about power supplies. Our official power supply has a captive cable. Why does it have a captive cable? Because USB cables are terrible – just think about the number of bell wire USB cables with 10k ohm resistance. So we have a captive cable on our official power supply because cables are terrible. The problem with SD cards of storage is not that the best SD cards are bad. It’s that bad SD cards exist, so go buy SanDisk. Go buy a real, non-fake SanDisk SD card, stick it in a Raspberry Pi. It’s amazing. It’ll never go wrong. </p><p id=\"TcI37r\">Like I said, the weakness is the provision of choice. What do we do in the industrial space? Our compute module products have eMMC soldered down on them. Raspberry Pi soldered down the eMMC actually for some of our industrial customers. It’s something that comes around quite frequently as a concept. I suspect it’s actually a product we would’ve launched by now, had we not been in a semiconductor shortage for the last couple years.</p><p id=\"RzgGWW\"><strong>How has the chip shortage affected you?</strong></p><p id=\"w3jKFJ\">It’s very bad. We sold the same number of Raspberry Pis last year that we sold the year before, but we entered last year with about a half-million unit customer backlog, and we left last year with several million units of customer backlog. Now there’s some panic dynamics in that number. You can’t just take the customer backlog and say, “In an unconstrained market I would’ve sold 7 [million] plus X.” You have to apply some discount factor to X to account for the fact that people are multi-ordering from several places, or they’re trying to build buffers, but you’re certainly millions of units of foregone volume last year.</p><p id=\"igEbmE\">That’s unfortunate. The interesting thing is a big part of Raspberry Pi’s value proposition is actually X stock availability, so the ability to buy a Raspberry Pi or huge numbers of Raspberry Pis — 10,000, 50,000 Raspberry Pis from stock tomorrow. That’s what Raspberry Pi is like normally. What’s really happened — let’s say 7 million units a year business to 2 million units of customer backlog. That’s three to four months of demand. It’s unevenly distributed, but on average, there’s a three- to four-month lead time for volume availability for Raspberry Pis. That’s actually just a traditional company’s model. That’s just how most other people’s hardware is. What we’ve done is we’ve been beaten back to a traditional business. We’ve had this weird, amazing business model, and we’ve been beaten back to a traditional business model, while those people who are in that business model have been beaten back to one year lead times.</p><p id=\"I7FdRG\">It is awful when somebody has built their product on our product and made a commitment to us, and we are not able to meet the service level that they have come to expect. Even if it was an amazing service level, it’s the service level that we want to be able to offer. We spend an enormous amount of time — we have a small sales force. We are not really a selling organization; we are more a “letting people buy” organization, but we do have a small sales force and they spend almost their entire time now managing our industrial customers through the shortage and really looking someone in the eye and saying, “When you say you want 500 Raspberry Pis, do you really want 500 Raspberry Pis? Are you building buffers? How many do you need tomorrow so your factory doesn’t stop? Oh, 10? Okay, I’ll send you 10 tomorrow and I’ll send you 10 the next day.”</p><p id=\"BrL6YR\">It’s incredibly labor-intensive, but it’s the way we’re getting our industrial customers through this challenge. Honestly, when people come to us, we’re not letting many people down as long as they’re realistic about things, so that hurts.</p><p id=\"W0FN9G\">The other thing that hurts is the enthusiastic community is really the heart and the energy of Raspberry Pi. The fact that the shortage is affecting people’s ability to buy their first Raspberry Pi or their fifth or their tenth personal Raspberry Pi — that’s very painful to us. It’s mitigated a little bit by the fact that most of our greatest enthusiasts have very large personal reserves of Raspberry Pis they can dip into. They can go to the vault, get a Raspberry Pi 2, or Raspberry Pi 3, or just last year’s Raspberry Pi 4. That does mitigate it a little bit, but it’s just — these people are so important to us, and letting anyone down is painful.</p><p id=\"NIYINV\">I don’t know what it’s like in the US, but you can’t buy cement in the UK. Cement is on allocation, fence posts, fence panels are on allocation. You can see people who work in the construction trade and how much it hurts them that there are things that they want to be building for their clients that they can’t build. It’s as much about that emotional thing as the financial thing, because we’re still selling a lot of computers and we’re still making a lot of money. Our customers are still buying a lot of computers and using them to make a lot of money. But that emotional feeling is not a good feeling. I hope we’ll be out of it soon, but time will tell, right?</p><p id=\"XyAOVx\"><strong>What’s the wildest thing you’ve ever seen done with Raspberry Pi?</strong></p><p id=\"KXOVSH\">Wildest thing we’ve ever seen done with Raspberry Pi? I don’t want to say <a href=\"https://www.newsweek.com/artificial-intelligence-cucumber-farm-raspberry-pi-495289\">the cucumber sorter</a>, but it is still the cucumber sorter. A Japanese engineer with elderly parents running a cucumber farm; Japanese cucumbers need to be sorted into 23 bins. It’s challenging as you get older to keep doing that. This chap built and trained a TensorFlow machine vision model to discriminate between different levels of spine and color and richness and length and so forth of Japanese cucumbers, and to perform a preliminary sort to assist his parents as they got older.</p><p id=\"fkuVjy\">It is a flippant example, but it is slightly wild. And it’s a poster child for a particular thing about creativity and a particular thing about unlocking the power of general purpose compute, right? We’re a general purpose computing company. We believe in general purpose computers. We hate appliance computing. Appliance computing will never let you do that because it’s not what it’s for. Appliance computers let you do a thing or a small variant of the thing that the appliance creator wanted. General purpose computers let you do whatever the hell you want. That’s why we love them. That’s why we’re going to keep making them.</p><p id=\"8WC51f\"><strong>That’s a great place to end it. Eben, this has been a fantastic conversation. Thank you for coming on </strong><em><strong>Decoder</strong></em><strong>. </strong></p><p id=\"8uYt6s\">Well, thank you very much.</p><aside id=\"CkTJ8m\"><div data-anthem-component=\"actionbox\" data-anthem-component-data='{\"title\":\"Decoder with Nilay Patel\",\"description\":\"A podcast from The Verge about big ideas and other problems.\",\"label\":\"Subscribe now!\",\"url\":\"https://podcasts.apple.com/us/podcast/decoder-with-nilay-patel/id1011668648?i=1000496212371\"}'></div></aside>",
  "image": "https://cdn.vox-cdn.com/thumbor/JMAklR9G8KhrrOAUzzKHV_UEBz8=/0x148:2050x1221/fit-in/1200x630/cdn.vox-cdn.com/uploads/chorus_asset/file/23295068/VRG_ILLO_Decoder_Eben_s.jpg",
  "description": "Raspberry Pi does it all.",
  "publisher": "The Verge",
  "publisherUrl": "https://www.theverge.com/"
}